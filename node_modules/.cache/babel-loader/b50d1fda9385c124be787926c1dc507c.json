{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nineleaps/Desktop/91_Social/spacex/src/modules/Address/component/AddressPage.js\";\nimport React, { Component } from 'react';\nimport Topbar from '../../Common/Topbar';\nimport PaginationPage from '../../Common/PaginationPage';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport moment from 'moment';\nimport RedditIcon from '@material-ui/icons/Reddit';\nexport default class AddressPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      data: [],\n      showData: [],\n      page: 1\n    };\n\n    this.changeData = page => {\n      const newData = this.state.data.slice((page - 1) * 10, page * 10);\n      this.setState({\n        showData: newData,\n        page\n      });\n    };\n  }\n\n  componentDidMount() {\n    const pages = Math.ceil(this.props.addressData.length / 10);\n    this.setState({\n      data: this.props.addressData,\n      count: pages,\n      showData: this.props.addressData.slice(0, 10)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Topbar, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            children: this.state.showData.map(card => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  title: card.payload_id,\n                  subheader: moment(card.event_date_utc).format('MMMM Do YYYY')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textSecondary\",\n                    children: [\"Nationality : \", card.nationality]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textSecondary\",\n                    children: [\"Nationality : \", card.nationality]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    children: card.details\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 37\n              }, this)\n            }, card, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PaginationPage, {\n          count: this.state.count,\n          changeData: this.changeData,\n          page: this.state.page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/nineleaps/Desktop/91_Social/spacex/src/modules/Address/component/AddressPage.js"],"names":["React","Component","Topbar","PaginationPage","Card","CardActions","CardContent","Container","Button","Grid","Typography","CardHeader","moment","RedditIcon","AddressPage","state","count","data","showData","page","changeData","newData","slice","setState","componentDidMount","pages","Math","ceil","props","addressData","length","render","marginTop","map","card","payload_id","event_date_utc","format","nationality","details"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Topbar from '../../Common/Topbar';\nimport PaginationPage from '../../Common/PaginationPage';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport moment from 'moment';\nimport RedditIcon from '@material-ui/icons/Reddit';\n\nexport default class AddressPage extends Component {\n\n    state = {\n        count: 0,\n        data: [],\n        showData: [],\n        page: 1,\n    }\n\n    componentDidMount() {\n        const pages = Math.ceil(this.props.addressData.length / 10);\n        this.setState({\n            data: this.props.addressData,\n            count: pages,\n            showData: this.props.addressData.slice(0, 10)\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Topbar {...this.props} />\n                <div style={{ marginTop: '20px' }}>\n                    <Container maxWidth=\"md\">\n                        <Grid container spacing={4}>\n                            {this.state.showData.map((card) => (\n                                <Grid item key={card} xs={12} sm={6} md={6}>\n                                    <Card>\n                                        <CardHeader\n                                            title={card.payload_id}\n                                            subheader={moment(card.event_date_utc).format('MMMM Do YYYY')}\n                                        />\n                                        <CardContent>\n                                            <Typography color=\"textSecondary\">\n                                                Nationality : {card.nationality}\n                                            </Typography>\n                                            <Typography color=\"textSecondary\">\n                                                Nationality : {card.nationality}\n                                            </Typography>\n                                            <Typography>\n                                                {card.details}\n                                            </Typography>\n                                        </CardContent>\n                                    </Card>\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Container>\n                    <PaginationPage\n                        count={this.state.count}\n                        changeData={this.changeData}\n                        page={this.state.page}\n                    />\n                </div>\n            </>\n        );\n    }\n\n    changeData = (page) => {\n        const newData = this.state.data.slice((page - 1) * 10, page * 10);\n        this.setState({\n            showData: newData,\n            page,\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}