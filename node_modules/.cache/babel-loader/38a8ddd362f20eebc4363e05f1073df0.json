{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { DashboardActionTypes, countUserSuccess } from './action';\nimport { showProgress, hideProgress } from '../AdminConsole/actions';\nimport { ConnectRepository } from '../../api/repositories/ConnectRepository';\nimport { addRequestFailedError } from './action';\nimport { combineDataIds, combineCountriesIdsWithCountry } from '../../utils/CombineIds';\nimport { ICountry } from '../../api/models/Permission';\nimport { IEcosystem } from '../../api/models/Profile';\nexport function* getHistoryJob(countUserAction) {\n  yield put(showProgress());\n  const countryIds = combineDataIds(countUserAction.payload.countries);\n  const permissionCountries = combineCountriesIdsWithCountry(countUserAction.payload.permissionCountries);\n  const permissionEcosystems = combineDataIds(countUserAction.payload.permissionEcosystems);\n  const response = yield call(ConnectRepository.getUserCount, countryIds, permissionCountries, permissionEcosystems);\n\n  if (response.advisors || response.entrepreneur) {\n    yield put(hideProgress());\n    yield put(countUserSuccess(response));\n  } else {\n    yield put(hideProgress());\n    yield put(addRequestFailedError(response));\n  }\n}\nexport function* watchCountUserAction() {\n  yield takeEvery(DashboardActionTypes.COUNT_USER_REQUEST, getHistoryJob);\n}","map":{"version":3,"sources":["/home/nineleaps/Desktop/91_Social/spacex/src/modules/History/saga.js"],"names":["call","put","takeEvery","DashboardActionTypes","countUserSuccess","showProgress","hideProgress","ConnectRepository","addRequestFailedError","combineDataIds","combineCountriesIdsWithCountry","ICountry","IEcosystem","getHistoryJob","countUserAction","countryIds","payload","countries","permissionCountries","permissionEcosystems","response","getUserCount","advisors","entrepreneur","watchCountUserAction","COUNT_USER_REQUEST"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,oBAAT,EAA+BC,gBAA/B,QAAuD,UAAvD;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,yBAA3C;AACA,SAASC,iBAAT,QAAkC,0CAAlC;AACA,SAASC,qBAAT,QAAsC,UAAtC;AACA,SAASC,cAAT,EAAyBC,8BAAzB,QAA+D,wBAA/D;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAO,UAAUC,aAAV,CAAwBC,eAAxB,EAAyC;AAE5C,QAAMb,GAAG,CAACI,YAAY,EAAb,CAAT;AACA,QAAMU,UAAU,GAAGN,cAAc,CAACK,eAAe,CAACE,OAAhB,CAAwBC,SAAzB,CAAjC;AACA,QAAMC,mBAAmB,GAAGR,8BAA8B,CAACI,eAAe,CAACE,OAAhB,CAAwBE,mBAAzB,CAA1D;AACA,QAAMC,oBAAoB,GAAGV,cAAc,CAACK,eAAe,CAACE,OAAhB,CAAwBG,oBAAzB,CAA3C;AACA,QAAMC,QAAQ,GAAG,MAAMpB,IAAI,CAACO,iBAAiB,CAACc,YAAnB,EAAiCN,UAAjC,EAA6CG,mBAA7C,EAAkEC,oBAAlE,CAA3B;;AACA,MAAIC,QAAQ,CAACE,QAAT,IAAqBF,QAAQ,CAACG,YAAlC,EAAgD;AAC5C,UAAMtB,GAAG,CAACK,YAAY,EAAb,CAAT;AACA,UAAML,GAAG,CAACG,gBAAgB,CAACgB,QAAD,CAAjB,CAAT;AACH,GAHD,MAGO;AACH,UAAMnB,GAAG,CAACK,YAAY,EAAb,CAAT;AACA,UAAML,GAAG,CAACO,qBAAqB,CAACY,QAAD,CAAtB,CAAT;AACH;AACJ;AAED,OAAO,UAAUI,oBAAV,GAAiC;AACpC,QAAMtB,SAAS,CAACC,oBAAoB,CAACsB,kBAAtB,EAA0CZ,aAA1C,CAAf;AACH","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\nimport { DashboardActionTypes, countUserSuccess } from './action';\nimport { showProgress, hideProgress } from '../AdminConsole/actions';\nimport { ConnectRepository } from '../../api/repositories/ConnectRepository';\nimport { addRequestFailedError } from './action';\nimport { combineDataIds, combineCountriesIdsWithCountry } from '../../utils/CombineIds';\nimport { ICountry } from '../../api/models/Permission';\nimport { IEcosystem } from '../../api/models/Profile';\n\nexport function* getHistoryJob(countUserAction) {\n\n    yield put(showProgress());\n    const countryIds = combineDataIds(countUserAction.payload.countries);\n    const permissionCountries = combineCountriesIdsWithCountry(countUserAction.payload.permissionCountries);\n    const permissionEcosystems = combineDataIds(countUserAction.payload.permissionEcosystems);\n    const response = yield call(ConnectRepository.getUserCount, countryIds, permissionCountries, permissionEcosystems);\n    if (response.advisors || response.entrepreneur) {\n        yield put(hideProgress());\n        yield put(countUserSuccess(response));\n    } else {\n        yield put(hideProgress());\n        yield put(addRequestFailedError(response));\n    }\n}\n\nexport function* watchCountUserAction() {\n    yield takeEvery(DashboardActionTypes.COUNT_USER_REQUEST, getHistoryJob);\n}\n"]},"metadata":{},"sourceType":"module"}