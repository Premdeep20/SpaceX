{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nineleaps/Desktop/91_Social/spacex/src/modules/Address/component/AddressPage.js\";\nimport React, { Component } from 'react';\nimport Topbar from '../../Common/Topbar';\nimport PaginationPage from '../../Common/PaginationPage';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport moment from 'moment';\nimport Data from '../../Common/Data';\nimport './AddressPage.css';\nexport default class AddressPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      data: [],\n      showData: [],\n      page: 1\n    };\n\n    this.changeData = page => {\n      const newData = this.state.data.slice((page - 1) * 10, page * 10);\n      this.setState({\n        showData: newData,\n        page\n      });\n    };\n\n    this.combineData = data => {\n      let string = '';\n\n      for (let index = 0; index < data.length - 1; index++) {\n        string = string + data[index] + ',';\n      }\n\n      string = string + data[data.length - 1];\n      return string;\n    };\n  }\n\n  componentDidMount() {\n    const pages = Math.ceil(this.props.addressData.length / 10);\n    this.setState({\n      data: this.props.addressData,\n      count: pages,\n      showData: this.props.addressData.slice(0, 10)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Topbar, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"magin-\",\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"md\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            children: this.state.showData.map(card => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  title: card.payload_id,\n                  subheader: moment(card.event_date_utc).format('MMMM Do YYYY')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Data, {\n                    label: \"Nationality :\\xA0\",\n                    value: card.nationality\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Data, {\n                    label: \"Customers :\\xA0\",\n                    value: this.combineData(card.customers)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Data, {\n                    label: \"Manufacturer :\\xA0\",\n                    value: card.manufacturer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Data, {\n                    label: \"Type :\\xA0\",\n                    value: card.payload_type\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Data, {\n                    label: \"Mass :\\xA0\",\n                    value: card.payload_mass_kg ? `${card.payload_mass_kg} kg` : 'No data available'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Data, {\n                    label: \"Orbit :\\xA0\",\n                    value: card.orbit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 37\n              }, this)\n            }, card, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PaginationPage, {\n          count: this.state.count,\n          changeData: this.changeData,\n          page: this.state.page\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/home/nineleaps/Desktop/91_Social/spacex/src/modules/Address/component/AddressPage.js"],"names":["React","Component","Topbar","PaginationPage","Card","CardContent","Container","Grid","CardHeader","moment","Data","AddressPage","state","count","data","showData","page","changeData","newData","slice","setState","combineData","string","index","length","componentDidMount","pages","Math","ceil","props","addressData","render","map","card","payload_id","event_date_utc","format","nationality","customers","manufacturer","payload_type","payload_mass_kg","orbit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Topbar from '../../Common/Topbar';\nimport PaginationPage from '../../Common/PaginationPage';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport moment from 'moment';\nimport Data from '../../Common/Data';\n\nimport './AddressPage.css'\n\nexport default class AddressPage extends Component {\n\n    state = {\n        count: 0,\n        data: [],\n        showData: [],\n        page: 1,\n    }\n\n    componentDidMount() {\n        const pages = Math.ceil(this.props.addressData.length / 10);\n        this.setState({\n            data: this.props.addressData,\n            count: pages,\n            showData: this.props.addressData.slice(0, 10)\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Topbar {...this.props} />\n                <div className=\"magin-\">\n                    <Container maxWidth=\"md\">\n                        <Grid container spacing={4}>\n                            {this.state.showData.map((card) => (\n                                <Grid item key={card} xs={12} sm={6} md={6}>\n                                    <Card>\n                                        <CardHeader\n                                            title={card.payload_id}\n                                            subheader={moment(card.event_date_utc).format('MMMM Do YYYY')}\n                                        />\n                                        <CardContent>\n                                            <Data\n                                                label='Nationality :&nbsp;'\n                                                value={card.nationality}\n                                            />\n                                            <Data\n                                                label='Customers :&nbsp;'\n                                                value={this.combineData(card.customers)}\n                                            />\n                                            <Data\n                                                label='Manufacturer :&nbsp;'\n                                                value={card.manufacturer}\n                                            />\n                                            <Data\n                                                label='Type :&nbsp;'\n                                                value={card.payload_type}\n                                            />\n                                            <Data\n                                                label='Mass :&nbsp;'\n                                                value={card.payload_mass_kg ?\n                                                    `${card.payload_mass_kg} kg` : 'No data available'}\n                                            />\n                                            <Data\n                                                label='Orbit :&nbsp;'\n                                                value={card.orbit}\n                                            />\n                                        </CardContent>\n                                    </Card>\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </Container>\n                    <PaginationPage\n                        count={this.state.count}\n                        changeData={this.changeData}\n                        page={this.state.page}\n                    />\n                </div>\n            </>\n        );\n    }\n\n    changeData = (page) => {\n        const newData = this.state.data.slice((page - 1) * 10, page * 10);\n        this.setState({\n            showData: newData,\n            page,\n        })\n    }\n\n    combineData = (data) => {\n        let string = '';\n        for (let index = 0; index < data.length - 1; index++) {\n            string = string + data[index] + ',';\n        }\n        string = string + data[data.length - 1];\n        return string;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}